// Consider this variable declaration:
const element = <h1>Hello, world!</h1>;

/**
 这个有趣的标签语法既不是字符串也不是 HTML。

 它被称为 JSX，是一个 JavaScript 的语法扩展。我们建议在 React 中配合使用 JSX，JSX 可以很好地描述 UI 应该呈现出它应有交互的本质形式。
 JSX 可能会使人联想到模版语言，但它具有 JavaScript 的全部功能。

 JSX 可以生成 React “元素”。我们将在下一章节中探讨如何将这些元素渲染为 DOM。下面我们看下学习 JSX 所需的基础知识。

Why JSX?
为什么使用 JSX？
    React 认为渲染逻辑本质上与其他 UI 逻辑内在耦合，比如，在 UI 中需要绑定处理事件、在某些时刻状态发生变化时需要通知到 UI，
 以及需要在 UI 中展示准备好的数据。
    React 并没有采用将标记与逻辑进行分离到不同文件这种人为地分离方式，而是通过将二者共同存放在称之为“组件”的松散耦合单元之中，
 来实现关注点分离。我们将在后面章节中深入学习组件。如果你还没有适应在 JS 中使用标记语言，这个会议讨论应该可以说服你。
    React 不强制要求使用 JSX，但是大多数人发现，在 JavaScript 代码中将 JSX 和 UI 放在一起时，会在视觉上有辅助作用。它还
 可以使 React 显示更多有用的错误和警告消息。

 搞清楚这个问题后，我们就开始学习 JSX 吧！
 */















